{"version":3,"sources":["webpack:///./src/components/providerList.js","webpack:///./src/components/CodeList.js","webpack:///./src/pages/index.js","webpack:///./src/utils/helpers.js"],"names":["providers","helpers","allEmailProvidersJson","orderBy","o","name","toLowerCase","className","map","provider","key","id","to","codes","allCodesJson","reply","code","IndexPage","title","indices","algoliaIndices","CodeList","exports","flatten","data","edges","node"],"mappings":"2LAMe,aACb,IAAIA,EAAS,OAgBb,OAHAA,EAAYC,UAAgBD,EAAUE,uBACtCF,EAAYG,kBAAQH,EAAW,CAAC,SAAAI,GAAC,OAAIA,EAAEC,KAAKC,iBAG1C,6BAASC,UAAU,gBACjB,0DACA,4BACGP,EAAUQ,KAAI,SAAAC,GAAQ,OACrB,wBAAIC,IAAKD,EAASE,IAChB,kBAAC,IAAD,CAAMC,GAAE,aAAeH,EAASE,IAAOF,EAASJ,a,SCvB7C,aACb,IAAIQ,EAAK,OAiBT,OAHAA,EAAQZ,UAAgBY,EAAMC,cAC9BD,EAAQV,kBAAQU,EAAO,CAAC,SAAAT,GAAC,OAAIA,EAAEW,SAG7B,6BAASR,UAAU,gBACjB,2CACA,4BACGM,EAAML,KAAI,SAAAQ,GAAI,OACb,wBAAIN,IAAKM,EAAKD,OACZ,kBAAC,IAAD,CAAMH,GAAE,SAAWI,EAAKD,OAAUC,EAAKD,c,SCDpCE,UApBG,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAEX,yBAAKX,UAAU,QACb,wBAAIA,UAAU,cAAd,oCACA,uBAAGA,UAAU,oBAAb,4BACA,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAQY,QAASC,QAIrB,yBAAKb,UAAU,aACb,kBAAC,EAAD,MACA,kBAACc,EAAD,U,kBCxBRC,EAAQC,QAAU,SAAAC,GAAI,OAAIA,EAAKC,MAAMjB,KAAI,qBAAGkB,U","file":"component---src-pages-index-js-a4030bfd085d05aa96cb.js","sourcesContent":["import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { orderBy } from 'lodash'\n\nimport * as helpers from '../utils/helpers'\n\nexport default () => {\n  let providers = useStaticQuery(graphql`\n    query Something {\n      allEmailProvidersJson {\n        edges {\n          node {\n            name\n            id\n            slug\n          }\n        }\n      }\n    }\n  `)\n  providers = helpers.flatten(providers.allEmailProvidersJson)\n  providers = orderBy(providers, [o => o.name.toLowerCase()])\n\n  return (\n    <section className='list-section'>\n      <h3>Email provider reply codes</h3>\n      <ul>\n        {providers.map(provider => (\n          <li key={provider.id}>\n            <Link to={`/provider/${provider.id}`}>{provider.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { orderBy } from 'lodash'\n\nimport * as helpers from '../utils/helpers'\n\nexport default () => {\n  let codes = useStaticQuery(graphql`\n    {\n      allCodesJson {\n        edges {\n          node {\n            id\n            description\n            reply\n            slug\n          }\n        }\n      }\n    }\n  `)\n  codes = helpers.flatten(codes.allCodesJson)\n  codes = orderBy(codes, [o => o.reply])\n\n  return (\n    <section className='list-section'>\n      <h3>Reply codes</h3>\n      <ul>\n        {codes.map(code => (\n          <li key={code.reply}>\n            <Link to={`/code/${code.reply}`}>{code.reply}</Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n","import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Search from '../components/search'\nimport ProviderList from '../components/providerList'\nimport CodeList from '../components/CodeList'\nimport { algoliaIndices } from '../utils/algoliaIndices'\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <SEO title='Home' />\n\n      <div className='hero'>\n        <h2 className='hero_title'>Your go-to field manual for SMTP</h2>\n        <p className='hero_description'>Search for an SMTP code.</p>\n        <div className='container-s'>\n          <Search indices={algoliaIndices} />\n        </div>\n      </div>\n\n      <div className='container'>\n        <ProviderList />\n        <CodeList />\n      </div>\n    </Layout>\n  )\n}\nexport default IndexPage\n","exports.flatten = data => data.edges.map(({ node }) => node)\n"],"sourceRoot":""}