{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/providerList.js","webpack:///./src/components/codeList.js"],"names":["NotFoundPage","title","className","href","target","rel","providers","helpers","allEmailProvidersJson","orderBy","o","name","toLowerCase","map","provider","key","id","to","codes","allCodesJson","reply","filterByCategory","code","renderCode","category","filter","startsWith"],"mappings":"2RAiCeA,UA1BM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,wBAEX,qBAAKC,UAAU,YAAf,KAAgC,qBAC9B,mCACM,6BADN,+BAGA,wDAC6B,IAC3B,uBACEC,KAAK,0DACLC,OAAO,SACPC,IAAI,uBAHN,eAFF,KAYA,kBAAC,IAAD,MACA,kBAAC,IAAD,U,8FCtBS,eACb,IAAIC,EAAS,OAgBb,OAHAA,EAAYC,UAAgBD,EAAUE,uBACtCF,EAAYG,kBAAQH,EAAW,CAAC,SAAAI,GAAC,OAAIA,EAAEC,KAAKC,iBAG1C,6BAASV,UAAU,gBACjB,yBAAKA,UAAU,sBACb,gDAEF,yBAAKA,UAAU,wBACb,6GAKA,wBAAIA,UAAU,6BACXI,EAAUO,KAAI,SAAAC,GAAQ,OACrB,wBAAIC,IAAKD,EAASE,IAChB,kBAAC,IAAD,CAAMC,GAAE,aAAeH,EAASE,IAAOF,EAASH,e,mrBC/B/C,eACb,IAAIO,EAAK,OAiBT,OAHAA,EAAQX,UAAgBW,EAAMC,cAC9BD,EAAQT,kBAAQS,EAAO,CAAC,SAAAR,GAAC,OAAIA,EAAEU,SAG7B,6BAASlB,UAAU,gBACjB,yBAAKA,UAAU,sBACb,2CAGF,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,cAAd,sCACA,yOAMA,wBAAIA,UAAU,6BACXmB,EAAiBH,EAAO,GAAGL,KAAI,SAAAS,GAAI,OAAIC,EAAWD,OAGrD,wBAAIpB,UAAU,uBAAd,yBACA,+LAMA,wBAAIA,UAAU,6BACXmB,EAAiBH,EAAO,GAAGL,KAAI,SAAAS,GAAI,OAAIC,EAAWD,UAO7D,IAAMD,EAAmB,SAACH,EAAOM,GAAR,OACvBC,iBAAOP,GAAO,SAAAI,GAAI,OAAII,qBAAWJ,EAAKF,MAAOI,OAEzCD,EAAa,SAAAD,GAAI,OACrB,wBAAIP,IAAKO,EAAKF,OACZ,kBAAC,IAAD,CAAMH,GAAE,SAAWK,EAAKF,OAAUE,EAAKF,U","file":"component---src-pages-404-js-24729f557d23e649ee1d.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ProviderList from '../components/providerList'\nimport CodeList from '../components/codeList'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title='404: Page not found' />\n\n    <div className='container' css={'margin-top: 50px;'}>\n      <h2>\n        ಥ_ಥ <br></br>This page has gone missing.\n      </h2>\n      <p>\n        Arrive from a broken link?{' '}\n        <a\n          href='https://github.com/wildbit/smtp-field-manual/issues/new'\n          target='_blank'\n          rel='noreferrer noopener'\n        >\n          Let us know\n        </a>\n        .\n      </p>\n\n      <CodeList />\n      <ProviderList />\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { orderBy } from 'lodash'\n\nimport * as helpers from '../utils/helpers'\n\nexport default () => {\n  let providers = useStaticQuery(graphql`\n    query Something {\n      allEmailProvidersJson {\n        edges {\n          node {\n            name\n            id\n            slug\n          }\n        }\n      }\n    }\n  `)\n  providers = helpers.flatten(providers.allEmailProvidersJson)\n  providers = orderBy(providers, [o => o.name.toLowerCase()])\n\n  return (\n    <section className='list-section'>\n      <div className='list-section_title'>\n        <h3>Email providers</h3>\n      </div>\n      <div className='list-section_content'>\n        <p>\n          See all of the collected SMTP responses for a specific email service\n          provider.\n        </p>\n\n        <ul className='columns-3 columns-diamond'>\n          {providers.map(provider => (\n            <li key={provider.id}>\n              <Link to={`/provider/${provider.id}`}>{provider.name}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { orderBy, filter, startsWith } from 'lodash'\n\nimport * as helpers from '../utils/helpers'\n\nexport default () => {\n  let codes = useStaticQuery(graphql`\n    {\n      allCodesJson {\n        edges {\n          node {\n            id\n            description\n            reply\n            slug\n          }\n        }\n      }\n    }\n  `)\n  codes = helpers.flatten(codes.allCodesJson)\n  codes = orderBy(codes, [o => o.reply])\n\n  return (\n    <section className='list-section'>\n      <div className='list-section_title'>\n        <h3>SMTP codes</h3>\n      </div>\n\n      <div className='list-section_content'>\n        <h4 className='code-title'>4.X.X Persistent transient failure</h4>\n        <p>\n          The mail server encountered a temporary failure. If the command is\n          repeated without any change, it might be completed. Mail servers can\n          use temporary failures like this to keep untrusted senders at bay.\n        </p>\n\n        <ul className='columns-3 columns-diamond'>\n          {filterByCategory(codes, 4).map(code => renderCode(code))}\n        </ul>\n\n        <h4 className='code-title push-top'>5.X.X permanent error</h4>\n        <p>\n          The mail server has encounted a permanent error. These errors will\n          result in the SMTP connection being dropped. Re-sending will usually\n          produce the same result.\n        </p>\n\n        <ul className='columns-3 columns-diamond'>\n          {filterByCategory(codes, 5).map(code => renderCode(code))}\n        </ul>\n      </div>\n    </section>\n  )\n}\n\nconst filterByCategory = (codes, category) =>\n  filter(codes, code => startsWith(code.reply, category))\n\nconst renderCode = code => (\n  <li key={code.reply}>\n    <Link to={`/code/${code.reply}`}>{code.reply}</Link>\n  </li>\n)\n"],"sourceRoot":""}