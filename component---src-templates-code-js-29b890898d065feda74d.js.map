{"version":3,"sources":["webpack:///./src/templates/code.js","webpack:///./src/components/responseList.js","webpack:///./src/components/responseJump.js"],"names":["data","pageContext","reply","description","providers","otherCodes","providersSorted","orderBy","o","name","toLowerCase","codesSorted","title","className","dangerouslySetInnerHTML","__html","list","identifierKey","labelKey","titleKey","titleLabelKey","titleSlugPrefix","map","code","key","to","slug","identifierPrefix","item","List","identifier","label","responses","response","Response","status","children","fullIdentifier","titleHref","titleSlug","id","href","identifer","replace","identifierHref"],"mappings":"gLASe,sBAAgC,IAAdA,EAAa,EAA5BC,YAAeD,KACvBE,EAA8CF,EAA9CE,MAAOC,EAAuCH,EAAvCG,YAAaC,EAA0BJ,EAA1BI,UAAWC,EAAeL,EAAfK,WACjCC,EAAkBC,kBAAQH,EAAW,CAAC,SAAAI,GAAC,OAAIA,EAAEC,KAAKC,iBAClDC,EAAcJ,kBAAQF,EAAY,CAAC,SAAAG,GAAC,OAAIA,EAAEN,SAEhD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,MAAUV,EAAL,eACV,yBAAKW,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,kBAAd,cAA2CX,GAC3C,uBACEW,UAAU,uBACVC,wBAAyB,CAAEC,OAAQZ,KAGrC,kBAAC,IAAD,CACEa,KAAMV,EACNW,cAAc,KACdC,SAAS,WAKf,yBAAKL,UAAU,aACb,kBAAC,IAAD,CACEG,KAAMV,EACNa,SAAS,KACTC,cAAc,OACdC,gBAAgB,cAGlB,6BACE,2CACA,4BACGV,EAAYW,KAAI,SAAAC,GAAI,OACnB,wBAAIC,IAAKD,EAAKrB,OACZ,kBAAC,IAAD,CAAMuB,GAAE,QAAUF,EAAKG,MAASH,EAAKrB,iB,0DC5CtC,gBAMR,IALLc,EAKI,EALJA,KACAI,EAII,EAJJA,cACAD,EAGI,EAHJA,SACAE,EAEI,EAFJA,gBAEI,IADJM,wBACI,MADe,GACf,EACJ,OACE,oCACGX,EAAKM,KAAI,SAAAM,GAAI,OACZ,kBAACC,EAAD,CACEL,IAAKI,EAAKT,GACVQ,iBAAkBA,EAClBG,WAAYF,EAAKT,GACjBY,MAAOH,EAAKR,GACZC,gBAAiBA,GAEhBO,EAAKI,UAAUV,KAAI,SAAAW,GAAQ,OAC1B,kBAACC,EAAD,CACEV,IAAKS,EAASE,OACdnC,KAAMiC,EACNV,KAAMK,EAAKT,GACXQ,iBAAkBA,aAShC,IAAME,EAAO,SAAC,GAMP,IALLO,EAKI,EALJA,SACAN,EAII,EAJJA,WACAH,EAGI,EAHJA,iBACAI,EAEI,EAFJA,MAGMM,EAAc,GAAMV,EAAmBG,EACvCQ,EAAS,IAAOD,EAChBE,EAHF,EADJlB,gBAIe,IAAyBS,EAExC,OACE,6BAASjB,UAAU,iBACjB,wBAAIA,UAAU,qBAAqB2B,GAAIH,GACrC,uBAAGI,KAAMH,GAAT,KADF,IAC4B,uBAAGG,KAAMF,GAAYR,IAEjD,yBAAKlB,UAAU,uBAAuBuB,GACtC,uBAAGK,KAAK,OAAO5B,UAAU,qBAAzB,mBAOAqB,EAAW,SAAC,GAAsC,IAApClC,EAAmC,EAAnCA,KAAMuB,EAA6B,EAA7BA,KAAMI,EAAuB,EAAvBA,iBACtBQ,EAAqBnC,EAArBmC,OAAQF,EAAajC,EAAbiC,SACVS,EAAS,GAAMf,EAAmBJ,EAAzB,IAAiCY,EAAOQ,QAAQ,MAAO,KAChEC,EAAc,IAAOF,EAE3B,OACE,yBAAKF,GAAIE,EAAW7B,UAAU,sBAC5B,uBAAG4B,KAAMG,EAAgB/B,UAAU,6BACjC,oCAEF,uBAAGA,UAAU,kBAAkBoB,M,iCCnErC,oBAEe,gBAA+D,IAA5DjB,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,cAAqD,IAAtCU,wBAAsC,MAAnB,GAAmB,EAAfT,EAAe,EAAfA,SAC5D,OACE,yBAAKL,UAAU,iBACb,yCACA,4BACGG,EAAKM,KAAI,SAAAM,GAAI,OACZ,wBAAIJ,IAAKI,EAAKX,IACZ,uBAAGwB,KAAI,IAAMd,EAAmBC,EAAKX,IAClCW,EAAKV","file":"component---src-templates-code-js-29b890898d065feda74d.js","sourcesContent":["import React from 'react'\nimport { orderBy } from 'lodash'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ResponseList from '../components/responseList'\nimport ResponseJump from '../components/responseJump'\n\nexport default ({ pageContext: { data } }) => {\n  const { reply, description, providers, otherCodes } = data\n  const providersSorted = orderBy(providers, [o => o.name.toLowerCase()])\n  const codesSorted = orderBy(otherCodes, [o => o.reply])\n\n  return (\n    <Layout>\n      <SEO title={`${reply} SMTP code`} />\n      <div className='masthead'>\n        <div className='container'>\n          <h2 className='masthead_title'>Reply code {reply}</h2>\n          <p\n            className='masthead_description'\n            dangerouslySetInnerHTML={{ __html: description }}\n          ></p>\n\n          <ResponseJump\n            list={providersSorted}\n            identifierKey='id'\n            labelKey='name'\n          />\n        </div>\n      </div>\n\n      <div className='container'>\n        <ResponseList\n          list={providersSorted}\n          titleKey='id'\n          titleLabelKey='name'\n          titleSlugPrefix='/provider'\n        />\n\n        <div>\n          <h3>Other codes</h3>\n          <ul>\n            {codesSorted.map(code => (\n              <li key={code.reply}>\n                <Link to={`/code${code.slug}`}>{code.reply}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n","import React from 'react'\n\nexport default ({\n  list,\n  titleLabelKey,\n  titleKey,\n  titleSlugPrefix,\n  identifierPrefix = '',\n}) => {\n  return (\n    <>\n      {list.map(item => (\n        <List\n          key={item[titleKey]}\n          identifierPrefix={identifierPrefix}\n          identifier={item[titleKey]}\n          label={item[titleLabelKey]}\n          titleSlugPrefix={titleSlugPrefix}\n        >\n          {item.responses.map(response => (\n            <Response\n              key={response.status}\n              data={response}\n              code={item[titleKey]}\n              identifierPrefix={identifierPrefix}\n            />\n          ))}\n        </List>\n      ))}\n    </>\n  )\n}\n\nconst List = ({\n  children,\n  identifier,\n  identifierPrefix,\n  label,\n  titleSlugPrefix,\n}) => {\n  const fullIdentifier = `${identifierPrefix}${identifier}`\n  const titleHref = `#${fullIdentifier}`\n  const titleSlug = `${titleSlugPrefix}/${identifier}`\n\n  return (\n    <section className='response-list'>\n      <h3 className='response-list_name' id={fullIdentifier}>\n        <a href={titleHref}>#</a> <a href={titleSlug}>{label}</a>\n      </h3>\n      <div className='response-list_items'>{children}</div>\n      <a href='#top' className='response-list_top'>\n        ↑ Back to top\n      </a>\n    </section>\n  )\n}\n\nconst Response = ({ data, code, identifierPrefix }) => {\n  const { status, response } = data\n  const identifer = `${identifierPrefix}${code}_${status.replace(/\\./g, '_')}`\n  const identifierHref = `#${identifer}`\n\n  return (\n    <div id={identifer} className='response-list_item'>\n      <a href={identifierHref} className='response-list_item-anchor'>\n        <span>#</span>\n      </a>\n      <p className='response-label'>{response}</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ list, identifierKey, identifierPrefix = '', labelKey }) => {\n  return (\n    <div className='provider-jump'>\n      <h4>Jump to ↓</h4>\n      <ul>\n        {list.map(item => (\n          <li key={item[identifierKey]}>\n            <a href={`#${identifierPrefix}${item[identifierKey]}`}>\n              {item[labelKey]}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"],"sourceRoot":""}