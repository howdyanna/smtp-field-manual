{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/providerList.js","webpack:///./src/components/CodeList.js"],"names":["IndexPage","hideSearch","title","className","indices","algoliaIndices","href","rel","target","to","id","exports","flatten","data","edges","map","node","showTitle","providers","helpers","allEmailProvidersJson","orderBy","o","name","toLowerCase","provider","key","codes","allCodesJson","reply","code"],"mappings":"0FAAA,yFAqEeA,UA3DG,WAChB,OACE,kBAAC,IAAD,CAAQC,YAAY,GAClB,kBAAC,IAAD,CAAKC,MAAM,sBAEX,yBAAKC,UAAU,QACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,cAAd,0DAGA,uBAAGA,UAAU,oBAAb,+CAGA,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAQC,QAASC,OAEnB,uBAAGF,UAAU,iBAAb,oBACoB,IAClB,uBACEG,KAAK,0BACLC,IAAI,sBACJC,OAAO,SACPL,UAAU,sBAJZ,eAYN,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,iDACA,oMAKA,yNAMA,2BACE,kBAAC,IAAD,CAAMM,GAAI,eAAV,kBAGJ,yBAAKC,GAAG,SACN,kBAAC,IAAD,OAGF,yBAAKA,GAAG,aACN,kBAAC,IAAD,W,kBC/DVC,EAAQC,QAAU,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,KAAI,qBAAGC,U,8FCM7B,gBAA2B,IAAD,IAAvBC,iBAAuB,SACnCC,EAAS,OAgBb,OAHAA,EAAYC,UAAgBD,EAAUE,uBACtCF,EAAYG,kBAAQH,EAAW,CAAC,SAAAI,GAAC,OAAIA,EAAEC,KAAKC,iBAG1C,6BAASrB,UAAU,gBAChBc,GAAa,+CACd,6GAIA,4BACGC,EAAUH,KAAI,SAAAU,GAAQ,OACrB,wBAAIC,IAAKD,EAASf,IAChB,kBAAC,IAAD,CAAMD,GAAE,aAAegB,EAASf,IAAOe,EAASF,c,mrBC3B7C,gBAA2B,IAAD,IAAvBN,iBAAuB,SACnCU,EAAK,OAiBT,OAHAA,EAAQR,UAAgBQ,EAAMC,cAC9BD,EAAQN,kBAAQM,EAAO,CAAC,SAAAL,GAAC,OAAIA,EAAEO,SAG7B,6BAAS1B,UAAU,gBAChBc,GAAa,0CACd,4BACGU,EAAMZ,KAAI,SAAAe,GAAI,OACb,wBAAIJ,IAAKI,EAAKD,OACZ,kBAAC,IAAD,CAAMpB,GAAE,SAAWqB,EAAKD,OAAUC,EAAKD,e","file":"component---src-pages-index-js-deb9c2ae9975d6e0a525.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Search from '../components/search'\nimport ProviderList from '../components/providerList'\nimport CodeList from '../components/CodeList'\nimport { algoliaIndices } from '../utils/algoliaIndices'\n\nconst IndexPage = () => {\n  return (\n    <Layout hideSearch={true}>\n      <SEO title='SMTP Field Manual' />\n\n      <div className='hero'>\n        <div className='hero_container'>\n          <h2 className='hero_title'>\n            A collection of raw SMTP responses spotted in the wild\n          </h2>\n          <p className='hero_description'>\n            Find a specific SMTP code or email provider\n          </p>\n          <div className='hero_search'>\n            <Search indices={algoliaIndices} />\n          </div>\n          <p className='hero_postmark'>\n            Brought to you by{' '}\n            <a\n              href='https://postmarkapp.com'\n              rel='noopener noreferrer'\n              target='_blank'\n              className='hero_postmark-icon'\n            >\n              Postmark\n            </a>\n          </p>\n        </div>\n      </div>\n\n      <div className='container'>\n        <div className='list-section'>\n          <h3>SMTP Field Manual</h3>\n          <p>\n            The SMTP field manual is a collection of raw STMP server responses\n            from major email service providers. This serves as a troubleshooting\n            tool for email professionals.\n          </p>\n          <p>\n            Weâ€™ve open sourced the SMTP Field Manual so that anyone can add or\n            edit SMTP responses. See something interesting from an email service\n            provider or simply have a suggestion? Let us know.\n          </p>\n\n          <p>\n            <Link to={'/contribute'}>Contribute &rarr;</Link>\n          </p>\n        </div>\n        <div id='codes'>\n          <CodeList />\n        </div>\n\n        <div id='providers'>\n          <ProviderList />\n        </div>\n      </div>\n    </Layout>\n  )\n}\nexport default IndexPage\n","exports.flatten = data => data.edges.map(({ node }) => node)\n","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { orderBy } from 'lodash'\n\nimport * as helpers from '../utils/helpers'\n\nexport default ({ showTitle = true }) => {\n  let providers = useStaticQuery(graphql`\n    query Something {\n      allEmailProvidersJson {\n        edges {\n          node {\n            name\n            id\n            slug\n          }\n        }\n      }\n    }\n  `)\n  providers = helpers.flatten(providers.allEmailProvidersJson)\n  providers = orderBy(providers, [o => o.name.toLowerCase()])\n\n  return (\n    <section className='list-section'>\n      {showTitle && <h3>Email providers</h3>}\n      <p>\n        See all of the collected SMTP responses for a specific email service\n        provider.\n      </p>\n      <ul>\n        {providers.map(provider => (\n          <li key={provider.id}>\n            <Link to={`/provider/${provider.id}`}>{provider.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n","import React from 'react'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\nimport { orderBy } from 'lodash'\n\nimport * as helpers from '../utils/helpers'\n\nexport default ({ showTitle = true }) => {\n  let codes = useStaticQuery(graphql`\n    {\n      allCodesJson {\n        edges {\n          node {\n            id\n            description\n            reply\n            slug\n          }\n        }\n      }\n    }\n  `)\n  codes = helpers.flatten(codes.allCodesJson)\n  codes = orderBy(codes, [o => o.reply])\n\n  return (\n    <section className='list-section'>\n      {showTitle && <h3>SMTP codes</h3>}\n      <ul>\n        {codes.map(code => (\n          <li key={code.reply}>\n            <Link to={`/code/${code.reply}`}>{code.reply}</Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n"],"sourceRoot":""}